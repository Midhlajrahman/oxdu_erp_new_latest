# Generated by Django 4.2.7 on 2025-04-03 08:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [('branches', '0001_initial'), ('masters', '0001_initial'), migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(app_label)s_%(class)s_creator',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={'ordering': ['-created'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(app_label)s_%(class)s_creator',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={'ordering': ['-created'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_id', models.CharField(max_length=128, null=True, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=128, null=True)),
                (
                    'marital_status',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('SINGLE', 'Single'),
                            ('MARRIED', 'Married'),
                            ('IN_A_RELATIONSHIP', 'In a Relationship'),
                            ('DIVORCED', 'Divorced'),
                            ('WIDOWED', 'Widowed'),
                            ('OTHER', 'Other'),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                ('personal_email', models.EmailField(blank=True, max_length=128, null=True)),
                ('mobile', models.CharField(blank=True, max_length=128, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=128, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                (
                    'religion',
                    models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Other', 'Other')], max_length=128, null=True),
                ),
                ('experience', models.TextField(blank=True, null=True)),
                ('qualifications', models.TextField(blank=True, null=True)),
                ('photo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='employees/photos/')),
                ('official_email', models.EmailField(blank=True, max_length=128, null=True)),
                ('status', models.CharField(choices=[('Appointed', 'Appointed'), ('Resigned', 'Resigned'), ('Terminated', 'Terminated')], default='Appointed', max_length=120)),
                ('resigned_date', models.DateField(blank=True, null=True)),
                ('notice_date', models.DateField(blank=True, null=True, verbose_name='Notice Period Last Date')),
                ('resigned_form', models.FileField(blank=True, null=True, upload_to='resigned-form/')),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('termination_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=128, null=True)),
                ('father_mobile', models.CharField(blank=True, max_length=128, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=128, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=128, null=True)),
                ('guardian_mobile', models.CharField(blank=True, max_length=128, null=True)),
                ('relationship_with_employee', models.CharField(blank=True, max_length=128, null=True, verbose_name='Guardian Relationship With Employee')),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('date_of_confirmation', models.DateField(blank=True, null=True)),
                ('offer_letter', models.FileField(blank=True, null=True, upload_to='employees/doc/')),
                ('joining_letter', models.FileField(blank=True, null=True, upload_to='employees/doc/')),
                ('agreement_letter', models.FileField(blank=True, null=True, upload_to='employees/doc/')),
                ('experience_letter', models.FileField(blank=True, null=True, upload_to='employees/doc/')),
                (
                    'type_of_residence',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('SELF_OWNED', 'Self Owned'),
                            ('FAMILY_OWNED', 'Family Owned'),
                            ('SELF_RENTED', 'Self Rented'),
                            ('FAMILY_RENTED', 'Family Rented'),
                            ('COMPANY_RENTED', 'Company Rented'),
                            ('COMPANY_OWNED', 'Company Owned'),
                            ('SHARED', 'Shared'),
                            ('OTHER', 'Other'),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                ('residence_name', models.CharField(blank=True, max_length=128, null=True)),
                ('residential_address', models.TextField(blank=True, null=True)),
                ('residence_contact', models.CharField(blank=True, max_length=128, null=True)),
                ('residential_zip_code', models.CharField(blank=True, max_length=128, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('permanent_zip_code', models.CharField(blank=True, max_length=128, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=128, null=True)),
                ('account_name', models.CharField(blank=True, max_length=128, null=True)),
                ('account_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='Bank Account Number')),
                ('ifsc_code', models.CharField(blank=True, max_length=128, null=True, verbose_name='Bank IFSC Code')),
                ('bank_branch', models.CharField(blank=True, max_length=128, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='PAN Card Number')),
                (
                    'employment_type',
                    models.CharField(
                        blank=True,
                        choices=[('PERMANENT', 'Permanent'), ('PROBATION', 'Probation'), ('CONTRACT', 'Contract'), ('TEMPORARY', 'Temporary')],
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    'blood_group',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('a-positive', 'A +Ve'),
                            ('b-positive', 'B +Ve'),
                            ('ab-positive', 'AB +Ve'),
                            ('o-positive', 'O +Ve'),
                            ('a-negative', 'A -Ve'),
                            ('b-negative', 'B -Ve'),
                            ('ab-negative', 'AB -Ve'),
                            ('o-negative', 'O -Ve'),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                ('basic_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('hra', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('transportation_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='branches.branch')),
                ('course', models.ForeignKey(blank=True, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, to='masters.course')),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(app_label)s_%(class)s_creator',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('department', models.ForeignKey(limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, to='employees.department')),
                ('designation', models.ForeignKey(limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, to='employees.designation')),
                (
                    'user',
                    models.OneToOneField(
                        limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employee', to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={'ordering': ['-created'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_id', models.CharField(db_index=True, max_length=128, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=128, null=True)),
                (
                    'marital_status',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('SINGLE', 'Single'),
                            ('MARRIED', 'Married'),
                            ('IN_A_RELATIONSHIP', 'In a Relationship'),
                            ('DIVORCED', 'Divorced'),
                            ('WIDOWED', 'Widowed'),
                            ('OTHER', 'Other'),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                ('personal_email', models.EmailField(blank=True, max_length=128, null=True)),
                ('mobile', models.CharField(blank=True, max_length=128, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=128, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                (
                    'religion',
                    models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Other', 'Other')], max_length=128, null=True),
                ),
                ('experience', models.TextField(blank=True, null=True)),
                ('qualifications', models.TextField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, max_length=100, null=True)),
                ('official_email', models.EmailField(blank=True, max_length=128, null=True)),
                ('status', models.CharField(choices=[('Appointed', 'Appointed'), ('Resigned', 'Resigned'), ('Terminated', 'Terminated')], default='Appointed', max_length=120)),
                ('resigned_date', models.DateField(blank=True, null=True)),
                ('notice_date', models.DateField(blank=True, null=True, verbose_name='Notice Period Last Date')),
                ('resigned_form', models.TextField(blank=True, max_length=100, null=True)),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('termination_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=128, null=True)),
                ('father_mobile', models.CharField(blank=True, max_length=128, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=128, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=128, null=True)),
                ('guardian_mobile', models.CharField(blank=True, max_length=128, null=True)),
                ('relationship_with_employee', models.CharField(blank=True, max_length=128, null=True, verbose_name='Guardian Relationship With Employee')),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('date_of_confirmation', models.DateField(blank=True, null=True)),
                ('offer_letter', models.TextField(blank=True, max_length=100, null=True)),
                ('joining_letter', models.TextField(blank=True, max_length=100, null=True)),
                ('agreement_letter', models.TextField(blank=True, max_length=100, null=True)),
                ('experience_letter', models.TextField(blank=True, max_length=100, null=True)),
                (
                    'type_of_residence',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('SELF_OWNED', 'Self Owned'),
                            ('FAMILY_OWNED', 'Family Owned'),
                            ('SELF_RENTED', 'Self Rented'),
                            ('FAMILY_RENTED', 'Family Rented'),
                            ('COMPANY_RENTED', 'Company Rented'),
                            ('COMPANY_OWNED', 'Company Owned'),
                            ('SHARED', 'Shared'),
                            ('OTHER', 'Other'),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                ('residence_name', models.CharField(blank=True, max_length=128, null=True)),
                ('residential_address', models.TextField(blank=True, null=True)),
                ('residence_contact', models.CharField(blank=True, max_length=128, null=True)),
                ('residential_zip_code', models.CharField(blank=True, max_length=128, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('permanent_zip_code', models.CharField(blank=True, max_length=128, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=128, null=True)),
                ('account_name', models.CharField(blank=True, max_length=128, null=True)),
                ('account_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='Bank Account Number')),
                ('ifsc_code', models.CharField(blank=True, max_length=128, null=True, verbose_name='Bank IFSC Code')),
                ('bank_branch', models.CharField(blank=True, max_length=128, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='PAN Card Number')),
                (
                    'employment_type',
                    models.CharField(
                        blank=True,
                        choices=[('PERMANENT', 'Permanent'), ('PROBATION', 'Probation'), ('CONTRACT', 'Contract'), ('TEMPORARY', 'Temporary')],
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    'blood_group',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('a-positive', 'A +Ve'),
                            ('b-positive', 'B +Ve'),
                            ('ab-positive', 'AB +Ve'),
                            ('o-positive', 'O +Ve'),
                            ('a-negative', 'A -Ve'),
                            ('b-negative', 'B -Ve'),
                            ('ab-negative', 'AB -Ve'),
                            ('o-negative', 'O -Ve'),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                ('basic_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('hra', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('transportation_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('branch', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='branches.branch')),
                (
                    'course',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={'is_active': True},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='masters.course',
                    ),
                ),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    'department',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={'is_active': True},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='employees.department',
                    ),
                ),
                (
                    'designation',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={'is_active': True},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='employees.designation',
                    ),
                ),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={'is_active': True},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical employee',
                'verbose_name_plural': 'historical employees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDesignation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL
                    ),
                ),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical designation',
                'verbose_name_plural': 'historical designations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDepartment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    'department_lead',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={'is_active': True},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='employees.employee',
                    ),
                ),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical department',
                'verbose_name_plural': 'historical departments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='department',
            name='department_lead',
            field=models.ForeignKey(
                blank=True, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='department_lead', to='employees.employee'
            ),
        ),
    ]
