# Generated by Django 4.2.7 on 2025-04-03 08:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import transactions.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('accounting', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('is_gst', models.BooleanField(default=False)),
                (
                    'expense_no',
                    models.CharField(
                        default=transactions.models.next_expense_no,
                        max_length=30,
                        validators=[django.core.validators.RegexValidator(message='Expense number must be at least 4 digits.', regex='^\\d{4,}$')],
                    ),
                ),
                ('bill_date', models.DateField(default=django.utils.timezone.now)),
                (
                    'discount_percentage',
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('auto_round_off', models.BooleanField(blank=True, default=False, null=True, verbose_name='Round Off')),
                ('round_off_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('taxable_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('items_discount_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sub_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('partialy_paid', 'Partially Paid'), ('unpaid', 'Unpaid')], default='paid', max_length=20)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='branches.branch')),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(app_label)s_%(class)s_creator',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('expense_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.account')),
                (
                    'party',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='party_expenses', to='accounting.account', verbose_name='Party A/C'
                    ),
                ),
            ],
            options={'ordering': ['-created'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('transaction_type', models.CharField(choices=[('RECEIPT', 'RECEIPT'), ('PAYMENT', 'PAYMENT'), ('JV', 'JV')], max_length=7)),
                ('payment_method', models.CharField(choices=[('BANK', 'BANK'), ('CASH', 'CASH')], max_length=4, null=True, verbose_name='Payment Method')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('voucher_no', models.CharField(max_length=50, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('document_no', models.CharField(blank=True, max_length=30, null=True)),
                ('document_date', models.DateField(blank=True, null=True)),
                ('is_denomination', models.BooleanField(default=False)),
                ('denomination', models.JSONField(null=True)),
                ('cheque_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Chq/DD No.')),
                ('cheque_date', models.DateField(blank=True, null=True, verbose_name='Chq/DD Date.')),
                ('cheque_name', models.CharField(blank=True, max_length=50, null=True)),
                ('transfer_method', models.CharField(blank=True, choices=[('Online', 'Online'), ('UPI', 'UPI')], max_length=20, null=True)),
                ('reference', models.CharField(choices=[('against', 'Against Reference'), ('not_applicable', 'Not Applicable')], max_length=15)),
                ('narration', models.TextField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='branches.branch')),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(app_label)s_%(class)s_creator',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('main_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='main_acc', to='accounting.account')),
                ('opposite_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='opp_acc', to='accounting.account')),
            ],
            options={'ordering': ['-created'], 'abstract': False, 'unique_together': {('transaction_type', 'voucher_no')}},
        ),
        migrations.CreateModel(
            name='TransactionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    'content_type',
                    models.ForeignKey(
                        limit_choices_to={'model__in': ('saleinvoice', 'purchase')},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='contenttypes.contenttype',
                        verbose_name='Type',
                    ),
                ),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.transaction')),
            ],
            options={'verbose_name': 'Transaction Entry', 'verbose_name_plural': 'Transaction Entries'},
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('hsn_or_sac', models.CharField(blank=True, max_length=50, null=True, verbose_name='HSN/SAC Code')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax_included', models.BooleanField(choices=[(True, 'Including Tax'), (False, 'Excluding Tax')], default=False, verbose_name='Tax Included')),
                ('price_with_out_tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(app_label)s_%(class)s_creator',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('expense_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.account')),
            ],
            options={'ordering': ['-created'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='HistoricalTransaction',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('transaction_type', models.CharField(choices=[('RECEIPT', 'RECEIPT'), ('PAYMENT', 'PAYMENT'), ('JV', 'JV')], max_length=7)),
                ('payment_method', models.CharField(choices=[('BANK', 'BANK'), ('CASH', 'CASH')], max_length=4, null=True, verbose_name='Payment Method')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('voucher_no', models.CharField(max_length=50, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('document_no', models.CharField(blank=True, max_length=30, null=True)),
                ('document_date', models.DateField(blank=True, null=True)),
                ('is_denomination', models.BooleanField(default=False)),
                ('denomination', models.JSONField(null=True)),
                ('cheque_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Chq/DD No.')),
                ('cheque_date', models.DateField(blank=True, null=True, verbose_name='Chq/DD Date.')),
                ('cheque_name', models.CharField(blank=True, max_length=50, null=True)),
                ('transfer_method', models.CharField(blank=True, choices=[('Online', 'Online'), ('UPI', 'UPI')], max_length=20, null=True)),
                ('reference', models.CharField(choices=[('against', 'Against Reference'), ('not_applicable', 'Not Applicable')], max_length=15)),
                ('narration', models.TextField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('branch', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='branches.branch')),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL
                    ),
                ),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                (
                    'main_account',
                    models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.account'),
                ),
                (
                    'opposite_account',
                    models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.account'),
                ),
            ],
            options={
                'verbose_name': 'historical transaction',
                'verbose_name_plural': 'historical transactions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalItem',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('hsn_or_sac', models.CharField(blank=True, max_length=50, null=True, verbose_name='HSN/SAC Code')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('tax_included', models.BooleanField(choices=[(True, 'Including Tax'), (False, 'Excluding Tax')], default=False, verbose_name='Tax Included')),
                ('price_with_out_tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    'expense_category',
                    models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.account'),
                ),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical item',
                'verbose_name_plural': 'historical items',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExpense',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('is_gst', models.BooleanField(default=False)),
                (
                    'expense_no',
                    models.CharField(
                        default=transactions.models.next_expense_no,
                        max_length=30,
                        validators=[django.core.validators.RegexValidator(message='Expense number must be at least 4 digits.', regex='^\\d{4,}$')],
                    ),
                ),
                ('bill_date', models.DateField(default=django.utils.timezone.now)),
                (
                    'discount_percentage',
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('auto_round_off', models.BooleanField(blank=True, default=False, null=True, verbose_name='Round Off')),
                ('round_off_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('taxable_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('items_discount_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sub_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('partialy_paid', 'Partially Paid'), ('unpaid', 'Unpaid')], default='paid', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('branch', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='branches.branch')),
                (
                    'creator',
                    models.ForeignKey(
                        blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    'expense_category',
                    models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.account'),
                ),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                (
                    'party',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='accounting.account',
                        verbose_name='Party A/C',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical expense',
                'verbose_name_plural': 'historical expenses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ExpenseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    'discount_percentage',
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.expense')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.item')),
            ],
        ),
    ]
